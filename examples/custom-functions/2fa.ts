import { ActionResult, Agent, Controller } from "browsernode";
import type { Page } from "browsernode/browser/types";
import { ChatOpenAI } from "browsernode/llm";
import { config } from "dotenv";
import { authenticator } from "otplib";
import { z } from "zod";

config();
/**
 * Go to https://authenticationtest.com/totpChallenge/ , the copy the secret key from the page.
 * Set the OTP_SECRET_KEY environment variable to the secret key.
 * Run the script.
 * The script will generate the 2FA code and submit it to the page.
 * The script will log the result to the console.
 */

// Initialize controller
const controller = new Controller();

// Get 2FA code - custom action
controller.action("Get 2FA code from when OTP is required", {
	paramModel: z.object({}), // No parameters needed
})(async function get2faCode(params: Record<string, any>, page: Page) {
	/**
	 * Custom action to retrieve 2FA/MFA code from OTP secret key using otplib.
	 * The OTP secret key should be set in the environment variable OTP_SECRET_KEY.
	 */
	const secretKey = process.env.OTP_SECRET_KEY;
	if (!secretKey) {
		throw new Error("OTP_SECRET_KEY environment variable is not set");
	}

	const code = authenticator.generate(secretKey);

	return new ActionResult({
		extractedContent: code,
		includeInMemory: true,
		longTermMemory: `Generated 2FA code: ${code}`,
	});
});

async function main() {
	// Example task using the 2FA action
	const task = `
	Steps:
	1. Go to https://authenticationtest.com/totpChallenge/ and try to log in.
	2. If prompted for 2FA code:
	2.1. Use the "Get 2FA code from when OTP is required" action to retrieve the 2FA code.
	2.2. Submit the code provided by the action.
	
	Considerations:
	- ALWAYS use the "Get 2FA code from when OTP is required" action to retrieve the 2FA code if needed.
	- NEVER skip the 2FA step if the page requires it.
	- NEVER extract the code from the page.
	- NEVER use a code that is not generated by the action.
	- NEVER hallucinate the 2FA code, always use the action to get it.
	
	You are completely FORBIDDEN to use any other method to get the 2FA code.
	`;

	// Initialize the language model
	const llm = new ChatOpenAI({
		model: "gpt-4o",
		temperature: 0.0,
		apiKey: process.env.OPENAI_API_KEY,
	});

	// Create and run the agent
	const agent = new Agent(task, llm, {
		controller: controller,
	});

	const result = await agent.run();
	console.log(`ðŸŽ¯ Task completed: ${result}`);
}

// Run the main function
main().catch(console.error);
